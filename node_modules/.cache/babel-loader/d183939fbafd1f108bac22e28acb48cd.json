{"ast":null,"code":"var _jsxFileName = \"/Users/sunyu/Desktop/Projects/MovieHub/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  //in the past, in order to handle internal state, we would have to create a class component\n  //with hooks we can have a functional component handle its own internal state\n  const [searchValue, setSearchValue] = useState(\"\"); //useState is a hooks API, accepts one argument which is the initial state, and then it returns an array containing the current state????\n\n  const handleSearchInputChanges = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const resetInputField = () => {\n    setSearchValue(\"\");\n  };\n\n  const callSearchFunction = e => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchValue,\n      onChange: handleSearchInputChanges,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: callSearchFunction,\n      type: \"submit\",\n      value: \"SEARCH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Search, \"F12Wsjogj0HVecr0VGWn/MCEg+A=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sunyu/Desktop/Projects/MovieHub/src/components/Search.js"],"names":["React","useState","Search","props","searchValue","setSearchValue","handleSearchInputChanges","e","target","value","resetInputField","callSearchFunction","preventDefault","search"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC1B;AACA;AACE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAHwB,CAG2B;;AACnD,QAAMK,wBAAwB,GAAIC,CAAD,IAAO;AACtCF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAFD;;AAIA,QAAMM,kBAAkB,GAAIJ,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,KAAK,CAACU,MAAN,CAAaT,WAAb;AACAM,IAAAA,eAAe;AAChB,GAJD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA,4BACE;AACE,MAAA,KAAK,EAAEN,WADT;AAEE,MAAA,QAAQ,EAAEE,wBAFZ;AAGE,MAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAO,MAAA,OAAO,EAAEK,kBAAhB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD,CA5BD;;GAAMT,M;;KAAAA,M;AA8BN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Search = (props) => {\n//in the past, in order to handle internal state, we would have to create a class component\n//with hooks we can have a functional component handle its own internal state\n  const [searchValue, setSearchValue] = useState(\"\");//useState is a hooks API, accepts one argument which is the initial state, and then it returns an array containing the current state????\n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  const resetInputField = () => {\n    setSearchValue(\"\")\n  }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  }\n\n  return (\n      <form className=\"search\">\n        <input\n          value={searchValue}\n          onChange={handleSearchInputChanges}\n          type=\"text\"\n        />\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n      </form>\n    );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}